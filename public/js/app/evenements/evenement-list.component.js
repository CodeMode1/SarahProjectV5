"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var erreur_service_1 = require('../erreurs/erreur.service');
var evenement_service_1 = require('./evenement.service');
var EvenementListComponent = (function () {
    function EvenementListComponent(_erreurService, _evenementService) {
        this._erreurService = _erreurService;
        this._evenementService = _evenementService;
        this.titre = "Liste des Évènements";
        this.noContratTextSearch = "";
        this.noContratFiltreList = "";
        this.boolSearchContrat = false;
        this.erreurNoContrat = "";
        this.specialTextSearch = "";
        this.erreurSpecialSearch = "";
        this.boolFullSearch = false;
        //suggere faire apparaitre spinner apres 300 msm ici fait disparaitre apres un multiple du temps
        // de la requete ca requete trop rapide en general.
        this.delai = 500;
        this.estRequete = false;
    }
    EvenementListComponent.prototype.ngOnInit = function () {
        // Get evenements du service.
        this.getEvenements();
    };
    EvenementListComponent.prototype.getEvenements = function () {
        var _this = this;
        this._evenementService.getEvenements().subscribe(function (data) {
            _this.evenements = data;
            for (var i = 0; i < _this.evenements.length; i++) {
                console.log('evenement du service : ');
                console.log(_this.evenements[i]);
            }
        }, function (error) { return _this._erreurService.handleErreur(error); });
    };
    EvenementListComponent.prototype.evenementSelect = function (evenement) {
        this.evenementSelected = evenement;
        console.log("evx select : " + this.evenementSelected);
        this.noEvenement = this.evenementSelected.noEvenement;
    };
    EvenementListComponent.prototype.onSearchNoContrat = function () {
        var _this = this;
        this.estRequete = true;
        var start = new Date().getTime();
        this.boolSearchContrat = false;
        if (this.noContratTextSearch === null || (this.noContratTextSearch).toString() === "") {
            this.estRequete = false;
            this.noContratFiltreList = "";
            return;
        }
        else if (isNaN(Number(this.noContratTextSearch))) {
            this.estRequete = false;
            this.erreurNoContrat = "Invalide. No Contrat doit être un nombre.";
            this.boolSearchContrat = true;
            return;
        }
        else if (this.noContratTextSearch.toString().length > 10) {
            this.estRequete = false;
            this.erreurNoContrat = "Invalide. No Contrat dépasse la longueur acceptée.";
            this.boolSearchContrat = true;
            return;
        }
        this._evenementService.getEvenement(Number(this.noContratTextSearch))
            .subscribe(function (data) {
            _this.noContratFiltreList = (data.noEvenement).toString();
            console.log(_this.noContratFiltreList);
            var end = new Date().getTime();
            _this.delai = _this.getDelai(start, end);
            _this.setTimeOut();
        }, function (error) {
            _this.boolSearchContrat = true;
            _this._erreurService.handleErreur(error);
        });
    };
    EvenementListComponent.prototype.cancelTime = function () {
        console.log("in cancel time");
        this.estRequete = false;
        clearTimeout(this.currentTimeout);
        this.currentTimeout = undefined;
        console.log(this.currentTimeout);
    };
    EvenementListComponent.prototype.setTimeOut = function () {
        var _this = this;
        this.currentTimeout = setTimeout(function () {
            _this.cancelTime();
        }, this.delai);
    };
    EvenementListComponent.prototype.getDelai = function (start, end, diff2) {
        var diff = end - start;
        diff *= 15;
        console.log(diff);
        if (diff2) {
            return diff2 *= 5;
        }
        return diff;
    };
    EvenementListComponent.prototype.logInput = function (value) {
        console.log(value);
    };
    EvenementListComponent.prototype.eventModal = function () {
        this.titreModal = "Suppression";
    };
    EvenementListComponent.prototype.onSpecialSearch = function () {
        var _this = this;
        this.estRequete = true;
        var start = new Date().getTime();
        this.boolFullSearch = false;
        if (this.specialTextSearch === null || (this.specialTextSearch).toString() === "") {
            this.estRequete = false;
            this.getEvenements();
            return;
        }
        else if (this.specialTextSearch.toString().length > 150) {
            this.estRequete = false;
            this.erreurSpecialSearch = "Invalide. Ne pas dépasser 150 caractères.";
            this.boolFullSearch = true;
            return;
        }
        this._evenementService.getEvenementsSpecialSearch(this.specialTextSearch)
            .subscribe(function (data) {
            _this.evenements = data;
            console.log('evx affiche table : ');
            console.log(_this.evenements);
            var end = new Date().getTime();
            _this.delai = _this.getDelai(start, end);
            _this.setTimeOut();
        }, function (error) {
            _this._erreurService.handleErreur(error);
        });
    };
    EvenementListComponent.prototype.actualiser = function () {
        var _this = this;
        this.estRequete = true;
        this.boolSearchContrat = false;
        var start = new Date().getTime();
        if (this.noContratTextSearch !== null && (this.noContratTextSearch).toString() !== "") {
            this._evenementService.getEvenement(Number(this.noContratTextSearch))
                .subscribe(function (data) {
                _this.noContratFiltreList = (data.noEvenement).toString();
                console.log('filtre table no contrat');
                console.log(_this.noContratFiltreList);
                var end = new Date().getTime();
                _this.delai = _this.getDelai(start, end);
                console.log(_this.delai);
                _this.setTimeOut();
            }, function (error) {
                _this.boolSearchContrat = true;
                _this._erreurService.handleErreur(error);
            });
            return;
        }
        else {
            this.noContratFiltreList = "";
            this.getEvenements();
            var end = new Date().getTime();
            this.delai = this.getDelai(start, end, 100);
            console.log(this.delai);
            this.setTimeOut();
        }
    };
    EvenementListComponent.prototype.onDelete = function () {
        var _this = this;
        if (this.evenementSelected !== null) {
            this._evenementService.deleteEvenement(this.evenementSelected)
                .subscribe(function (data) { return console.log(data); }, function (error) { return _this._erreurService.handleErreur(error); });
        }
    };
    EvenementListComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'my-evenement-list',
            templateUrl: 'evenement-list.component.html',
            styles: ["\n        section{\n            padding: 2% 0 0 0;\n        }\n\n        td{\n            text-align: left;\n            padding-bottom: 0;\n            font-size: 14px;\n            max-width: 300px;\n            word-wrap: break-word;\n        }\n\n        th{\n            font-size: 14px;\n            white-space: pre; \n        }\n\n        thead > tr{\n            background-color: #fafafa;\n            border-bottom: 0.25em solid #1565c0;\n        }\n\n        tbody > tr:hover{\n            background-color: #a9d4f9;\n        }\n\n        tbody > tr{\n            border-bottom: 0.2em solid #ddd;\n            cursor: pointer;\n        }\n\n        .estSelectRange{\n             background-color: #519BDB;\n        }\n\n        h3{\n            padding: 0.5% 0 0.5% 0;\n            margin:0;\n            font-size: 1.3vw;\n        }\n\n        .panel-heading{\n            text-align:center;\n        }\n\n        .bg-danger{\n            text-align: center;\n            color: #CC0000;\n            font-weight: bolder;\n            font-size: 1vw;\n        }\n\n        #searchLabel{\n            margin-bottom:0;\n            text-align:left;\n            padding: 0;\n        }\n\n        #erreurContrat{\n            text-align: center;\n            padding: 0 5% 0 0;\n        }\n\n         #erreurFullSearch {\n            clear: both;\n            float: left;\n        }\n\n        .size{\n            font-size:1vw;\n            text-align:center;\n        }\n\n        .disableA{\n            pointer-events: none;\n            cursor: default;\n            color: #ddd;\n        }\n\n        .erreurSearchNoContrat, .erreurSpecialSearch{\n            background: #ff8080;\n        }\n\n        #boutonSearchNoContrat{\n            background: #519BDB;\n        }\n\n        #boutonSpecialSearch{\n            clear: both;\n            float: left;\n            background: #519BDB;\n        }\n\n        a{\n            color: #000;\n            display: block;\n            clear: both;\n            position: relative;\n        }\n\n        a span{\n            position: absolute;\n            display:none;\n            background: rgba(20, 20, 31, 0.84);\n            text-align: center;\n            border-left: 1px solid #111;\n            border-top: 1px solid #111;\n            border-right: 1px solid #333;\n            border-bottom: 1px solid #333;\n            border-radius: 3px;\n            color: #fff;\n            font-size: 0.7em;\n            text-indent: 0;\n            width: auto;\n            height:auto;\n        }\n\n        a span:after{\n            content: ' ';\n\t        height: 0;\n\t        position: absolute;\n\t        width: 0;\n            border: 10px solid transparent;\n\t        border-top-color: #333;\n            top: 100%;\n\t        left: 10px;\n        }\n\n        a:hover span{\n            display: block;\n            bottom: 1vw;\n            left:75%;\n            z-index: 9999;\n            -moz-animation: moveTooltip .25s linear;\n            -webkit-animation: moveTooltip .25s linear;\n        }\n\n        a:hover{\n            color: #337ab7;\n        }\n\n        .widgets{\n            display: inline-block;\n            padding-right: 5%;\n        }\n\n        .divFooter{\n            text-align:center;\n        }\n\n        .col-md-12 {\n            padding: 2%;\n        }\n\n        @-moz-keyframes moveTooltip {\n            0% {\n                -moz-transform: scale(0,0);\n                opacity: 0;\n            }\n        \n            45% {\n                -moz-transform: scale(0.4,0.4);\n                opacity: 0.7;\n            }\n        \n            75% {\n                -moz-transform: scale(1.3,1.3);\n                opacity: 0.4;\n            }\n        \n            100% {\n                -moz-transform: scale(1,1);\n                opacity: 1;\n            };\n}\n\n@-webkit-keyframes moveTooltip {\n    0% {\n        -webkit-transform: scale(0,0);\n        opacity: 0;\n    }\n\n    45% {\n        -webkit-transform: scale(0.4,0.4);\n        opacity: 0.7;\n    }\n\n    75% {\n        -webkit-transform: scale(1.3,1.3);\n        opacity: 0.4;\n    }\n\n    100% {\n        -webkit-transform: scale(1,1);\n        opacity: 1;\n    };\n} \n    "]
        }), 
        __metadata('design:paramtypes', [erreur_service_1.ErreurService, evenement_service_1.EvenementService])
    ], EvenementListComponent);
    return EvenementListComponent;
}());
exports.EvenementListComponent = EvenementListComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
